"" Source your .vimrc
"source ~/.vimrc
""" Map leader to space ---------------------
let mapleader = " "
"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.

""" Common settings -------------------------

set scrolloff=8
set incsearch
set number relativenumber
set ideastrictmode
set ideajoin
set ideamarks
set ideastatusicon=gray
set idearefactormode=keep
set showmode
set showcmd
set wildmenu
set keep-english-in-normal-and-restore-in-insert
set ttimeout
set ruler
set history=200
set display=truncate
set nrformats-=octal



if has('reltime')
  set incsearch
endif



" Allow backspacing over everything in insert mode.
set backspace=indent,eol,start


""" Idea specific settings ------------------
set ideajoin
set ideastatusicon=gray
set idearefactormode=keep


""" Mappings --------------------------------
map <leader>a <Action>(Annotate)
map <leader>b <Action>(ToggleLineBreakpoint)
map <leader>c <Action>(Stop)
map <leader>d <Action>(Debug)
map <leader>e <Plug>(easymotion-f)
map <leader>f <Plug>(easymotion-s)

map <leader>h <Action>(Vcs.ShowTabbedFileHistory)
map <leader>h <Action>(HighlightUsagesInFile)

map <leader>l V<Action>(ReformatCode)
map <leader>o <Action>(FileStructurePopup)
nmap <leader>q <Action>(ToggleRenderedDocPresentation)     " ??
map <leader>r <Action>(RenameElement)
"map <leader>s <Action>(SelectInProjectView)            "" 切到项目list
nmap <leader>s <Action>(ShowUsages)                     "哪里用了这个方法
map <leader>t <Action>(TypeHierarchy)
map <leader>u <Action>(FindUsages)
nmap <leader>v <Action>(Vcs.QuickListPopupAction)

nmap <leader>x <Action>(HideAllWindows)                  " 关闭侧边栏

map <leader>z <Action>(ToggleDistractionFreeMode)

map <S-e> <Action>(GotoNextError)
map <S-M-e> <Action>(GotoPreviousError)
map <leader>t <Action>(ActivateTerminalToolWindow)

map <leader>i ~hi
vmap <leader>u d~h


" imap jk <ESC>
imap kj <ESC>
" Don't use Ex mode, use Q for formatting.:
map Q gq
sunmap Q
map H ^
map L $
map U <C-R>

inoremap <C-U> <C-G>u<C-U>

nnoremap <Leader>o :<C-u>action RecentProjectListGroup<CR>
map <Leader>ev :action IntroduceVariable<CR>                    " 类似 .var
map <C-n> <Plug>NextWholeOccurrence



"nmap [[ <Action>(MethodUp)
"nmap ]] <Action>(MethodDown)

map <BS> d
nmap ]c <Action>(VcsShowNextChangeMarker)
nmap [c <Action>(VcsShowPrevChangeMarker)

nmap ]q <Action>(GotoNextElementUnderCaretUsage)
nmap [q <Action>(GotoPrevElementUnderCaretUsage)

nmap gb <Action>(Back)
nmap gf <Action>(Forward)
nmap gd <Action>(GotoDeclaration)
nmap gD <Action>(GotoTypeDeclaration)
nmap gl <Action>(QuickJavaDoc)
nmap gL <Action>(QuickImplementations)
nmap gy <Action>(ShowErrorDescription)




""" Plugins  --------------------------------
set surround
set multiple-cursors
set commentary
set argtextobj
set easymotion
set textobj-entire
set ReplaceWithRegister

""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>"


" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
" Avoid side effects when it was already reset.
if &compatible
  set nocompatible
endif


"" actionlist
"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)


" Find more examples here: https://jb.gg/share-ideavimrc
